package widget

import (
	"github.com/cufee/aftermath/cmd/frontend/components"
	cwidget "github.com/cufee/aftermath/cmd/frontend/components/widget"
	"github.com/cufee/aftermath/cmd/frontend/handler"
	"github.com/cufee/aftermath/cmd/frontend/layouts"
	"github.com/cufee/aftermath/cmd/frontend/routes/api/widget"
	"strconv"
)

var WidgetPreview handler.Page = func(ctx *handler.Context) (handler.Layout, templ.Component, error) {
	widget, err := widget.AccountWidget(ctx)
	if err != nil {
		return layouts.Main, nil, ctx.Error(err, "failed to generate a widget preview")
	}
	if widget == nil {
		return nil, nil, nil
	}

	var withUnrated = ctx.Query("ou") != "0"
	var withRating = ctx.Query("or") != "0"
	var vehicles int = 3
	if v, err := strconv.Atoi(ctx.Query("vl")); err == nil && v >= 0 && v <= 10 {
		vehicles = v
	}

	return layouts.Main, widgetPreview(ctx.Path("accountId"), widget, withRating, withUnrated, vehicles), nil
}

templ widgetPreview(accountID string, widget templ.Component, or, ou bool, vl int) {
	<div class="flex flex-row flex-wrap gap-4">
		<div class="flex flex-col gap-4 basis-1/2 grow">
			<div class="flex flex-col gap-2 text-center">
				<div class="text-3xl font-bold">
					Aftermath Streaming Widget
				</div>
				<p>
					Level up your stream with a real-time stats widget!
				</p>
			</div>
			@cwidget.Settings(handlePreview(accountID), or, ou, vl)
			<button type="button" id="copy-widget-link" class="btn btn-primary w-full transition-all duration-250 ease-in-out" onclick={ copyButtonAction() }>Copy OBS Link</button>
		</div>
		<div class="flex flex-col items-center justify-center grow overflow-auto">
			@components.OBSMockup("/assets/widget-background.jpg") {
				<div class="min-h-96 w-full overflow-auto p-2 relative">
					<div class="min-w-[400px] w-max mx-auto h-1/2">
						@widget
					</div>
				</div>
			}
		</div>
	</div>
}

script copyButtonAction() {
	const url = window.location.protocol + "//" + window.location.host + window.location.pathname + "live" + window.location.search
	navigator.clipboard.writeText(url);
	
	const btn = document.getElementById("copy-widget-link")
	const oldText = btn.textContent
	btn.textContent = "Copied to Clipboard!";
	btn.classList.add("btn-success");
	setTimeout(()=> {
		btn.textContent = oldText;
		btn.classList.remove("btn-success");
	}, 2000)
}

script handlePreview(id string) {
	const ouEl = document.getElementById("widget-settings-ou")
	const orEl = document.getElementById("widget-settings-or")
	const vlEl = document.getElementById("widget-settings-vl")
	const button = document.getElementById("copy-widget-link")
	
	const ou = ouEl.checked ? "1" : "0"
	const or = orEl.checked ? "1" : "0"
	const vl = vlEl.value
	const newQuery = `?or=${or}&ou=${ou}&vl=${vl}`
	if (newQuery != window.location.search) {
		ouEl.disabled = true
		orEl.disabled = true
		vlEl.disabled = true
		button.disabled = true

		fetch("/api/p/widget/"+id+newQuery).then((r) => r.text()).then((html) => {
			document.getElementById("account-widget").outerHTML = html
			const url = window.location.protocol + "//" + window.location.host + window.location.pathname + newQuery;
			window.history?.pushState({path:url},'',url);
		}).catch(e => console.log(e)).finally(() => {
			ouEl.disabled = false
			orEl.disabled = false
			vlEl.disabled = false
			button.disabled = false
		})
	}
}
