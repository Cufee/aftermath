package redirect

import (
	"github.com/cufee/aftermath/cmd/frontend/handler"
	"github.com/cufee/aftermath/cmd/frontend/logic"
	"github.com/cufee/aftermath/internal/constants"
	"net/http"
	"slices"
	"strings"
)

var VerifyFromDiscord handler.Partial = func(ctx *handler.Context) (templ.Component, error) {
	realm := strings.ToLower(ctx.Path("realm"))
	if !slices.Contains([]string{"na", "eu", "as"}, realm) {
		return nil, ctx.Redirect("/", http.StatusMovedPermanently)
	}
	return discordVerifyRedirect(realm), nil
}

templ discordVerifyRedirect(realm string) {
	<head>
		<title>Aftermath ðŸ”— Wargaming - { strings.ToUpper(realm) }</title>
		<meta property="og:type" content="website"/>
		<meta property="og:title" content={ "Aftermath ðŸ”— Wargaming -" + strings.ToUpper(realm) }/>
		<meta property="og:image" content={ constants.FrontendURL + "/assets/og-verify.jpg" }/>
		<meta property="og:description" content="Link your Blitz account to Aftermath!"/>
		<meta name="twitter:card" content="summary_large_image"/>
		<meta name="twitter:title" content={ "Aftermath ðŸ”— Wargaming -" + strings.ToUpper(realm) }/>
		<meta name="twitter:image:alt" content="Link your Blitz account to Aftermath"/>
		<meta name="twitter:image" content={ constants.FrontendURL + "/assets/og-verify.jpg" }/>
		<meta name="twitter:description" content="Link your Blitz account to Aftermath!"/>
	</head>
	@logic.EmbedScript(discordVerifyRedirectScript(realm))
}

script discordVerifyRedirectScript(realm string) {
	window.location.href="/login?from=/api/auth/wargaming/login/"+realm;
}
