version: "3"

dotenv:
  - ".env"

vars:
  DATABASE_PATH: $DATABASE_PATH
  DATABASE_NAME: $DATABASE_NAME

tasks:
  test:
    dotenv:
      - ".env.test"
    desc: runs tests
    cmds:
      - task: db-migrate-apply-test
      - |
        if [ -z "{{ .CLI_ARGS }}" ]; then
          go test -timeout 30s --count=1 -v ./...
        else
          go test -timeout 30s --count=1 -v -run {{ .CLI_ARGS }}
        fi

  ent-generate:
    desc: generate go code for the ent schema directory
    cmd: go generate internal/database/ent

  db-migrate:
    desc: generate migrations
    cmd: atlas migrate hash --dir "file://internal/database/ent/migrations" && atlas migrate diff {{.CLI_ARGS}} --dir "file://internal/database/ent/migrations" --to "ent://internal/database/ent/schema" --dev-url "sqlite://file?mode=memory&_fk=1"
  db-migrate-apply:
    desc: apply migrations using atlas
    cmds:
      # variables will be pulled from global vars declaration unless overwritten in the task call
      - echo "Applying migrations to {{.DATABASE_PATH}}/{{.DATABASE_NAME}}"
      - atlas migrate apply --allow-dirty --dir "file://internal/database/ent/migrations" --tx-mode all --url "sqlite://{{.DATABASE_PATH}}/{{.DATABASE_NAME}}?_fk=1"
  db-migrate-down:
    desc: rollback migrations using atlas
    cmds:
      # variables will be pulled from global vars declaration unless overwritten in the task call
      - echo "Applying down migrations to {{.DATABASE_PATH}}/{{.DATABASE_NAME}}"
      - atlas migrate down --dir "file://internal/database/ent/migrations" --url "sqlite://{{.DATABASE_PATH}}/{{.DATABASE_NAME}}?_fk=1" --dev-url "sqlite://file?mode=memory&_fk=1" {{ .CLI_ARGS }}
  db-migrate-apply-test:
    desc: apply migrations to the tests database using atlas
    cmds:
      - task: db-migrate-apply
        vars:
          DATABASE_PATH: $DATABASE_PATH
          DATABASE_NAME: tests.db

  build-widget:
    desc: Build amth-widget js assets
    dir: cmd/frontend/widget
    cmds:
      - bun run build
      - rm -rf ../public/js/widget
      - mkdir -p ../public/js/widget
      - cp dist/components/* ../public/js/widget/

  dev:
    desc: Start a local dev server
    cmds:
      - air
  dev-web:
    desc: Start a local web server for frontend only
    cmds:
      - air -c .air.web.toml
