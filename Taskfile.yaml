version: "3"

dotenv:
  - ".env"

tasks:
  test:
    dotenv:
      - ".env.test"
    desc: runs tests
    cmds:
      # - task: db-migrate-apply-test
      - |
        if [ -z "{{ .CLI_ARGS }}" ]; then
          go test -timeout 30s --count=1 -v ./...
        else
          go test -timeout 30s --count=1 -v -run {{ .CLI_ARGS }}
        fi

  db-generate:
    desc: generate models from database schema
    cmd: go generate ./internal/database

  db-migrate:
    desc: generate migrations
    cmds: 
      - echo "Generating migrations"
      - task: db-migrate-hash
      - atlas migrate diff --env local

  db-migrate-hash:
    desc: generate migrations
    cmds: 
      - atlas migrate hash --env local

  db-migrate-apply:
    desc: apply migrations using atlas
    cmds:
      # variables will be pulled from global vars declaration unless overwritten in the task call
      - echo "Applying migrations to $DATABASE_HOST/$DATABASE_NAME"
      - atlas migrate apply --env local

  db-migrate-tests:
    desc: apply migrations using atlas
    dotenv:
      - ".env.test"
    cmds:
      - atlas migrate apply --env local

  assets-generate:
    desc: generate static assets
    cmd: go generate ./internal/assets

  widget-build:
    desc: Build amth-widget js assets
    dir: cmd/frontend/widget
    cmds:
      - bun run build
      - rm -rf ../public/js/widget
      - mkdir -p ../public/js/widget
      - cp dist/components/* ../public/js/widget/

  dev:
    desc: Start a local dev server
    cmds:
      - air
  dev-web:
    desc: Start a local web server for frontend only
    cmds:
      - air -c .air.web.toml
