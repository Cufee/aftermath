services:
  aftermath-database:
    image: ghcr.io/tursodatabase/libsql-server:latest
    platform: linux/amd64
    restart: always
    environment:
      - SQLD_NODE=primary
    volumes:
      - ${DATABASE_DIR}:/var/lib/sqld
    networks:
      - dokploy-network
    hostname: aftermath-database

  aftermath-migrate:
    image: aftermath-migrate
    build:
      dockerfile: Dockerfile.migrate
    depends_on:
      aftermath-database:
        condition: service_started
    command: sh -c 'migrate apply --allow-dirty --dir "file:///migrations" --tx-mode all --url "libsql+ws://aftermath-database:8080"'
    networks:
      - dokploy-network

  aftermath-service:
    image: aftermath-service
    build:
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - PORT=3000
      - DATABASE_URL=libsql://aftermath-database:8080?tls=0
    depends_on:
      aftermath-database:
        condition: service_started
      aftermath-migrate:
        condition: service_completed_successfully
    entrypoint: ["app"]
    restart: always
    deploy:
      resources:
        reservations:
          memory: 128m
        limits:
          memory: 256m
    networks:
      - dokploy-network
    hostname: aftermath-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aftermath-monorepo-compose.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.aftermath-monorepo-compose.entrypoints=websecure"
      - "traefik.http.routers.aftermath-monorepo-compose.tls.certResolver=letsencrypt"
      - "traefik.http.services.aftermath-monorepo-compose.loadbalancer.server.port=3000"

networks:
  dokploy-network:
    external: true

volumes:
  step-ca-home:
