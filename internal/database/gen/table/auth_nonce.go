//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var AuthNonce = newAuthNonceTable("", "auth_nonce", "")

type authNonceTable struct {
	sqlite.Table

	// Columns
	ID         sqlite.ColumnString
	CreatedAt  sqlite.ColumnTimestamp
	UpdatedAt  sqlite.ColumnTimestamp
	Active     sqlite.ColumnBool
	ExpiresAt  sqlite.ColumnTimestamp
	Identifier sqlite.ColumnString
	PublicID   sqlite.ColumnString
	Metadata   sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type AuthNonceTable struct {
	authNonceTable

	EXCLUDED authNonceTable
}

// AS creates new AuthNonceTable with assigned alias
func (a AuthNonceTable) AS(alias string) *AuthNonceTable {
	return newAuthNonceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AuthNonceTable with assigned schema name
func (a AuthNonceTable) FromSchema(schemaName string) *AuthNonceTable {
	return newAuthNonceTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AuthNonceTable with assigned table prefix
func (a AuthNonceTable) WithPrefix(prefix string) *AuthNonceTable {
	return newAuthNonceTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AuthNonceTable with assigned table suffix
func (a AuthNonceTable) WithSuffix(suffix string) *AuthNonceTable {
	return newAuthNonceTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAuthNonceTable(schemaName, tableName, alias string) *AuthNonceTable {
	return &AuthNonceTable{
		authNonceTable: newAuthNonceTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newAuthNonceTableImpl("", "excluded", ""),
	}
}

func newAuthNonceTableImpl(schemaName, tableName, alias string) authNonceTable {
	var (
		IDColumn         = sqlite.StringColumn("id")
		CreatedAtColumn  = sqlite.TimestampColumn("created_at")
		UpdatedAtColumn  = sqlite.TimestampColumn("updated_at")
		ActiveColumn     = sqlite.BoolColumn("active")
		ExpiresAtColumn  = sqlite.TimestampColumn("expires_at")
		IdentifierColumn = sqlite.StringColumn("identifier")
		PublicIDColumn   = sqlite.StringColumn("public_id")
		MetadataColumn   = sqlite.StringColumn("metadata")
		allColumns       = sqlite.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, ActiveColumn, ExpiresAtColumn, IdentifierColumn, PublicIDColumn, MetadataColumn}
		mutableColumns   = sqlite.ColumnList{CreatedAtColumn, UpdatedAtColumn, ActiveColumn, ExpiresAtColumn, IdentifierColumn, PublicIDColumn, MetadataColumn}
	)

	return authNonceTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,
		Active:     ActiveColumn,
		ExpiresAt:  ExpiresAtColumn,
		Identifier: IdentifierColumn,
		PublicID:   PublicIDColumn,
		Metadata:   MetadataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
