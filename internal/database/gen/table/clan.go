//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Clan = newClanTable("", "clan", "")

type clanTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp
	UpdatedAt sqlite.ColumnTimestamp
	Tag       sqlite.ColumnString
	Name      sqlite.ColumnString
	EmblemID  sqlite.ColumnString
	Members   sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type ClanTable struct {
	clanTable

	EXCLUDED clanTable
}

// AS creates new ClanTable with assigned alias
func (a ClanTable) AS(alias string) *ClanTable {
	return newClanTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ClanTable with assigned schema name
func (a ClanTable) FromSchema(schemaName string) *ClanTable {
	return newClanTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ClanTable with assigned table prefix
func (a ClanTable) WithPrefix(prefix string) *ClanTable {
	return newClanTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ClanTable with assigned table suffix
func (a ClanTable) WithSuffix(suffix string) *ClanTable {
	return newClanTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newClanTable(schemaName, tableName, alias string) *ClanTable {
	return &ClanTable{
		clanTable: newClanTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newClanTableImpl("", "excluded", ""),
	}
}

func newClanTableImpl(schemaName, tableName, alias string) clanTable {
	var (
		IDColumn        = sqlite.StringColumn("id")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		UpdatedAtColumn = sqlite.TimestampColumn("updated_at")
		TagColumn       = sqlite.StringColumn("tag")
		NameColumn      = sqlite.StringColumn("name")
		EmblemIDColumn  = sqlite.StringColumn("emblem_id")
		MembersColumn   = sqlite.StringColumn("members")
		allColumns      = sqlite.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, TagColumn, NameColumn, EmblemIDColumn, MembersColumn}
		mutableColumns  = sqlite.ColumnList{CreatedAtColumn, UpdatedAtColumn, TagColumn, NameColumn, EmblemIDColumn, MembersColumn}
	)

	return clanTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		Tag:       TagColumn,
		Name:      NameColumn,
		EmblemID:  EmblemIDColumn,
		Members:   MembersColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
