//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var VehicleAverages = newVehicleAveragesTable("public", "vehicle_averages", "")

type vehicleAveragesTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnString
	CreatedAt postgres.ColumnTimestampz
	UpdatedAt postgres.ColumnTimestampz
	Data      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type VehicleAveragesTable struct {
	vehicleAveragesTable

	EXCLUDED vehicleAveragesTable
}

// AS creates new VehicleAveragesTable with assigned alias
func (a VehicleAveragesTable) AS(alias string) *VehicleAveragesTable {
	return newVehicleAveragesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new VehicleAveragesTable with assigned schema name
func (a VehicleAveragesTable) FromSchema(schemaName string) *VehicleAveragesTable {
	return newVehicleAveragesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new VehicleAveragesTable with assigned table prefix
func (a VehicleAveragesTable) WithPrefix(prefix string) *VehicleAveragesTable {
	return newVehicleAveragesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new VehicleAveragesTable with assigned table suffix
func (a VehicleAveragesTable) WithSuffix(suffix string) *VehicleAveragesTable {
	return newVehicleAveragesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newVehicleAveragesTable(schemaName, tableName, alias string) *VehicleAveragesTable {
	return &VehicleAveragesTable{
		vehicleAveragesTable: newVehicleAveragesTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newVehicleAveragesTableImpl("", "excluded", ""),
	}
}

func newVehicleAveragesTableImpl(schemaName, tableName, alias string) vehicleAveragesTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn = postgres.TimestampzColumn("updated_at")
		DataColumn      = postgres.StringColumn("data")
		allColumns      = postgres.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DataColumn}
		mutableColumns  = postgres.ColumnList{CreatedAtColumn, UpdatedAtColumn, DataColumn}
		defaultColumns  = postgres.ColumnList{}
	)

	return vehicleAveragesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		Data:      DataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
